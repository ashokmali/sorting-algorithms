# MERGES TWO SORTED HALF ARRAYS INTO ACTUAL ARRAY
def merge(left, right, array):
    i = 0
    j = 0
    k = 0
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            array[k] = left[i]
            i += 1
        else:
            array[k] = right[j]
            j += 1
        k += 1
    while i < len(left):
        array[k] = left[i]
        i += 1
        k += 1
    while j < len(right):
        array[k] = right[j]
        j += 1
        k += 1
    return array


# SORTS THE ARRAY THROUGH DIVIDE AND CONQUER STRATEGY (RECURSIVE)
# COMPLEXITY IS O(n.lgn)
def merge_sort(array):
    if len(array) == 1 or len(array) == 0:
        return array
    else:
        mid = len(array) // 2
        left = array[:mid]
        right = array[mid:]
        merge_sort(left)
        merge_sort(right)
        return merge(left, right, array)

